{"version":3,"sources":["webpack/bootstrap 4994857b28606b201053","./lib/main.js","./lib/dom_node_collection.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;;AAGA;AACA;AACA,2BAA0B;AAC1B,yBAAwB;AACxB;AACA;AACA,aAAY;AACZ,qDAAoD;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;;;;;ACtFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA,oBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA,oBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;;AAEA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;;AAEA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;;AAEA","file":"JMoD.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4994857b28606b201053\n **/","DOMNodeCollection = require('./dom_node_collection.js');\nvar functions = [];\n\n// $l is the core function.  It receives one argument (arg).\n$l = function (arg) {\n  var elementsArray;\n  var nodeCollection;\n\n  // If arg type is a string, it is expected to be a CSS selector\n  // which is used to identify nodes on a page.\n  if ( typeof arg === \"string\" ) {\n    console.log(\"ARG IS STRING\");\n    nodeCollection = _createDOMNodeFromString(arg);\n  }\n  // What is an HTMLElement?  Why can't I access this part of the if block\n  else if ( arg instanceof HTMLElement) {\n    console.log(\"ARG IS HTML ELEMENT\");\n    elementsArray = [arg];\n    nodeCollection = new DOMNodeCollection(elementsArray);\n  }\n  else if ( arg instanceof Function ) {\n    console.log(\"ARG IS FUNCTION\");\n    var functions = [];\n    functions.push(arg);\n    if ( document.readyState === \"complete\" ) {\n      functions.forEach( function (fn) {\n        fn();\n      });\n    }\n    return;\n  }\n  // Returns an instance of DOMNodeCollection\n  return nodeCollection;\n}\n\nvar _createDOMNodeFromString = function (arg) {\n  // Matches will be a NodeList (array-like object), which is retrieved via the\n  // native JavaScript API\n  var matches = document.querySelectorAll(arg);\n  // We use the slice method for arrays on the 'matches' object to create an\n  // actual array-object of matches - with each element being an HTMLElement\n  var elementsArray = [].slice.call(matches);\n  // We create an instance of DOMNodeCollection using elementsArray as the input\n  // The DOMNodeCollection will have an instance variable pointing to elementsArray\n  return new DOMNodeCollection(elementsArray);\n};\n\n\n\n\n\n$l.extend = Object.assign;\n\n\n$l.ajax = function(options){\n  var defaults = {\n    success: function() {},\n    error: function() {},\n    url: '',\n    type: 'GET',\n    data: {},\n    contentType: 'application/x-www-form-urlencoded; charset=UTF-8'\n  };\n\n  this.extend(defaults, options);\n  var xhr = new XMLHttpRequest();\n  xhr.open(defaults.type, defaults.url);\n\n  xhr.onload = function () {\n    if(xhr.status === 200) {\n      defaults.success(JSON.parse(xhr.response));\n    } else {\n      defaults.error(JSON.parse(xhr.response));\n    }\n  };\n\n  xhr.send(defaults.data);\n};\n\ndocument.onreadystatechange = function () {\n  if( document.readyState === \"complete\" ) {\n    functions.forEach( function (fn) {\n      fn();\n    });\n    functions = [];\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/main.js\n ** module id = 0\n ** module chunks = 0\n **/","// Takes in an array of HTMLElements and sets the array to an instance variable\nfunction DOMNodeCollection(elementsArray) {\n  this.elementsArray = elementsArray;\n}\n\n// Takes an optional string argument\nDOMNodeCollection.prototype.innerHTML = function (string) {\n  // If no string argument is given,\n  // return the innerHTML of the first HTMLElement in the elementsArray.\n  if (string === undefined){\n    return this.elementsArray[0].innerHTML;\n  }\n  // If given a string argument, set the innerHTML of each element as the\n  // provided string input\n  else {\n    for (var i = 0; i < this.elementsArray.length; i++) {\n      this.elementsArray[i].innerHTML = string;\n    }\n  }\n};\n\n// Deletes the innerHTML of the DOMNodeCollection instance.\nDOMNodeCollection.prototype.deleteInnerHTML = function () {\n  this.innerHTML(\"\");\n};\n\nDOMNodeCollection.prototype.append = function (arg) {\n  if (arg instanceof HTMLElement){\n    for (var i = 0; i < this.elementsArray.length; i++) {\n      this.elementsArray[i].innerHTML += arg.outerHTML;\n    }\n  }\n  else if (typeof arg === \"string\") {\n    for (var i = 0; i < this.elementsArray.length; i++) {\n      this.elementsArray[i].innerHTML += arg;\n    }\n  }\n  else if (arg instanceof DOMNodeCollection) {\n    for (var i = 0; i < this.elementsArray.length; i++) {\n      this.elementsArray[i].innerHTML += arg.outerHTML();\n    }\n  }\n};\n\n// Returns the outerHTML of each element in the DOMNodeCollection\nDOMNodeCollection.prototype.outerHTML = function () {\n  var outerHTML = \"\";\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    outerHTML += this.elementsArray[i].outerHTML;\n  }\n  return outerHTML;\n};\n\nDOMNodeCollection.prototype.attr = function (key, value) {\n  if (value === undefined){\n    return this.elementsArray[0].getAttribute(key);\n  }\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    this.elementsArray[i].setAttribute(key, value);\n  }\n};\n\nDOMNodeCollection.prototype.addClass = function (className) {\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    var oldClasses = this.elementsArray[i].getAttribute('class');\n    if (!oldClasses){\n      var newClasses = className;\n    } else {\n      var newClasses = oldClasses + ' ' + className;\n    }\n    this.elementsArray[i].setAttribute('class', newClasses);\n  }\n};\n\nDOMNodeCollection.prototype.removeClass = function (className) {\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    var oldClasses = this.elementsArray[i].getAttribute('class');\n    if (!oldClasses) {\n      continue;\n    }\n    var newClasses = oldClasses.replace(className, \"\");\n    this.elementsArray[i].setAttribute('class', newClasses);\n  }\n};\n\n// DOMNodeCollection#children is a method that returns a DOMNodeCollection of\n// all the children of all HTMLElements in the instance variable elementsArray\nDOMNodeCollection.prototype.children = function () {\n  var allChildren = [];\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    var childrenArray = [].slice.call(this.elementsArray[i].children)\n    allChildren = allChildren.concat(childrenArray);\n  }\n  return new DOMNodeCollection(allChildren);\n};\n\n// DOMNodeCollection#parent returns a DOMNodeCollection of the parents of each\n// of the HTMLElements\nDOMNodeCollection.prototype.parent = function () {\n  var allParents = [];\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    var parentElement = this.elementsArray[i].parentElement;\n    // Does not push the same parentElement into the allParents array\n    if (!allParents.includes(parentElement)){\n      allParents.push(parentElement);\n    }\n  }\n  return new DOMNodeCollection(allParents);\n};\n\n// DOMNodeCollection#find returns a DOMNodeCollection of all the nodes matching\n// the selector passed in as an argument that are descendants of the HTMLElements\n// in this.elementsArray\nDOMNodeCollection.prototype.find = function (selector) {\n  var allFound = [];\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    var found = [].slice.call(this.elementsArray[i].querySelectorAll(selector));\n    if (found.length > 0){\n      allFound = allFound.concat(found);\n    }\n  }\n  return new DOMNodeCollection(allFound);\n};\n\nDOMNodeCollection.prototype.remove = function () {\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    this.elementsArray[i].outerHTML = \"\";\n  }\n  this.elementsArray = [];\n};\n\nDOMNodeCollection.prototype.on = function (type, callback) {\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    this.elementsArray[i].addEventListener(type, callback);\n  }\n};\n\nDOMNodeCollection.prototype.off = function (type, callback) {\n  for (var i = 0; i < this.elementsArray.length; i++) {\n    this.elementsArray[i].removeEventListener(type, callback);\n  }\n};\n\nmodule.exports = DOMNodeCollection;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/dom_node_collection.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}